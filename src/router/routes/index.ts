import type { RouteRecordRaw } from 'vue-router';
import RouteMiddlewares from '../middlewares/RouteMiddlewares';

export const routes: RouteRecordRaw[] = [
  {
    path: '/',
    name: 'home',
    component: () => import('@/views/HomeView.vue'),
    meta: { layout: 'HomeLayout' },
  },
  {
    path: '/login',
    name: 'login',
    component: () => import('@/views/LoginView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { elevated: false } },
    beforeEnter: [RouteMiddlewares.useNotAuthOnly],
  },
  {
    path: '/registration',
    name: 'registration',
    component: () => import('@/views/RegistrationView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { elevated: false } },
    beforeEnter: [RouteMiddlewares.useNotAuthOnly],
  },
  {
    path: '/restore',
    name: 'restore',
    component: () => import('@/views/RestoreView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { elevated: false } },
    beforeEnter: [RouteMiddlewares.useNotAuthOnly],
  },
  {
    path: '/applications',
    name: 'applications',
    component: () => import('@/views/ApplicationsView.vue'),
    meta: { layout: 'HomeLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useRoleGuard(['admin'])],
  },
  {
    path: '/applications/search',
    name: 'applications-search',
    component: () => import('@/views/ApplicationsSearchView.vue'),
    meta: { layout: 'HomeLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useRoleGuard(['admin'])],
  },
  {
    path: '/applications/:id',
    name: 'applications-id',
    props: true,
    component: () => import('@/views/ApplicationsIdView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { elevated: false, title: 'applicationsId.layout.title' } },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useRoleGuard(['admin'])],
  },
  {
    path: '/account',
    name: 'account',
    component: () => import('@/views/AccountView.vue'),
    meta: { layout: 'AccountLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
  },
  {
    path: '/tools',
    name: 'tools',
    component: () => import('@/views/ToolsView.vue'),
    redirect: '/tools/roles',
    children: [
      { path: 'google', component: () => import('~/tools/ToolsGoogle.vue') },
      { path: 'roles', component: () => import('~/tools/ToolsRoles.vue') },
    ],
    meta: { layout: 'ToolsLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useRoleGuard(['admin'])],
  },
  {
    path: '/tasks',
    name: 'tasks',
    component: () => import('@/views/TasksView.vue'),
    children: [
      { name: 'tasks', path: '', component: () => import('~/tasks/TasksList.vue') },
      { path: 'create', component: () => import('~/tasks/TasksCreate.vue') },
    ],
    meta: { layout: 'TasksLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
  },
  {
    path: '/tasks/:id',
    name: 'taskById',
    component: () => import('@/views/TaskByIdView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { title: 'taskId.layout.title', elevated: false } },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
  },
  {
    path: '/gallery',
    name: 'gallery',
    component: () => import('@/views/GalleryView.vue'),
    meta: { layout: 'GalleryLayout' },
  },
  {
    path: '/stats',
    component: () => import('@/views/StatsView.vue'),
    meta: { layout: 'StatsLayout', layoutProps: { elevated: false } },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useRoleGuard(['admin'])],
  },
  {
    path: '/meets',
    name: 'meets',
    component: () => import('@/views/MeetView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { title: 'meets.layout.title', elevated: false } },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
  },
  {
    path: '/meets/:id',
    component: () => import('@/views/MeetByIdView.vue'),
    meta: { layout: 'MeetLayout', layoutProps: { elevated: false } },
    beforeEnter: [RouteMiddlewares.useAuthGuard, RouteMiddlewares.useUUIDV4Guard],
  },
  {
    path: '/chat',
    name: 'chat',
    component: () => import('@/views/ChatView.vue'),
    meta: { layout: 'VoidLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
  },
  {
    path: '/chat/:id',
    name: 'chatId',
    component: () => import('@/views/ChatByIdView.vue'),
    meta: { layout: 'VoidLayout' },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
    props: true,
  },
  {
    path: '/users/:id',
    name: 'userId',
    component: () => import('@/views/UserIdView.vue'),
    meta: { layout: 'SimpleLayout', layoutProps: { elevated: false, back: true } },
    beforeEnter: [RouteMiddlewares.useAuthGuard],
    props: true,
  },
  {
    path: '/:pathMatch(.*)*',
    name: '404',
    component: () => import('~/TheError.vue'),
    props: { code: 404, message: 'Not found' },
    meta: { layout: 'VoidLayout' },
  },
  // {
  //   path: '/test',
  //   name: 'test',
  //   component: () => import('@/views/TestView.vue'),
  //   meta: { layout: 'VoidLayout' },
  // },
];
